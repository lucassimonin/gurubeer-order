# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: "fr"
    admin.locales: "fr"
    admin.locales.available: ["fr"]
    validator.translation_domain: 'app'
    media_directory: '%kernel.project_dir%/public/uploads/media'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Event,Kernel.php,Migrations,Model,Query,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\EventListener\MediaUploadListener:
        tags:
        - { name: doctrine.event_listener, event: prePersist }
        - { name: doctrine.event_listener, event: preUpdate }
        - { name: doctrine.event_listener, event: postLoad }

    App\EventListener\UpdateEntityListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }

    App\Form\Extension\ChoiceExtension:
        tags:
        - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\ChoiceType }

    App\Utils\FileUploader:
        arguments:
            $targetDirectory: '%media_directory%'

    App\DataFixtures\Faker\PasswordProvider:
        tags: [ { name: nelmio_alice.faker.provider } ]
